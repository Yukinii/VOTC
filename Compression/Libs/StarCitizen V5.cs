{"Category":2,"Added":"2015-01-13T17:24:34.6571171Z","Updated":"0001-01-01T00:00:00","Harmful":false,"Name":"StarCitizen V5","Author":"BitFlash, LLC.","App":"StarCitizen","Foreground":"Yes","Description":"This is a Sample Script","Commands":["test - echo test using TTS"],"Contents":"using System.Collections.Generic;\r\nusing System.Linq;\r\nusing System.Speech.Recognition;\r\nusing System.Windows.Forms;\r\nusing System.Windows.Input;\r\nusing VOTCClient.Core;\r\nusing VOTCClient.Core.Extensions;\r\nusing VOTCClient.Core.Scripts;\r\nusing VOTCClient.Core.Speech;\r\nusing Keyboard = InputManager.Keyboard;\r\nnamespace ScriptTemplate\r\n{\r\n    //Public functions / definations are forced. Everything else is up to you!\r\n    public class StarCitizenTemplate\r\n    {\r\n        static bool _isFreelookActive;\r\n        static bool _isMouseMoveActive;\r\n        //Required! You need to fill out everything just like I did!\r\n        //Copy paste this block to your scripts and edit it accordingly.\r\n        public static ScriptInfo SetUp()\r\n        {\r\n            Kernel.UI.DisplayCmd(\"Script loaded!\", false);\r\n            Kernel.UI.DisplayCmd(@\"   _____   __                    ______    _    __     _                    \", false);\r\n            Kernel.UI.DisplayCmd(@\"  / ___/  / /_  ____ _   _____  / ____/   (_)  / /_   (_) ____  ___    ____ \", false);\r\n            Kernel.UI.DisplayCmd(@\"  \\__ \\  / __/ / __ `/  / ___/ / /       / /  / __/  / / /_  / / _ \\  / __ \\\", false);\r\n            Kernel.UI.DisplayCmd(@\" ___/ / / /_  / /_/ /  / /    / /___    / /  / /_   / /   / /_/  __/ / / / /\", false);\r\n            Kernel.UI.DisplayCmd(@\"/____/  \\__/  \\__,_/  /_/     \\____/   /_/   \\__/  /_/   /___/\\___/ /_/ /_/ \", false);\r\n            Kernel.UI.DisplayCmd(\"\", false);\r\n            var Info = new ScriptInfo\r\n            {\r\n                ProcessName = \"StarCitizen\",\r\n                RequireProcessInForeground = false,\r\n            };\r\n            LoadGrammar();\r\n            return Info;\r\n        }\r\n        //Entry point. If we've heard something we let you know here!\r\n        public static bool IncommingVoicePacket(string voicePacket)\r\n        {\r\n            string[] Cmd = voicePacket.Split(' ');\r\n            return Process(Cmd);\r\n        }\r\n        static bool Process(IEnumerable<string> cmd)\r\n        {\r\n            var Command = cmd.Select(part => part.ToLower()).ToList();\r\n            if (Command.ContainsMany(\"welcome\", \"to\", \"miami\"))\r\n                Kernel.Playlist.Play(@\"Sounds/StartUp.mp3\");\r\n            if (Command.ContainsMany(\"shields\", \"front\"))\r\n                Keyboard.KeyPress(Key.NumPad8.ToKey(), 2000);\r\n            if (Command.ContainsMany(\"shields\", \"back\"))\r\n                Keyboard.KeyPress(Key.NumPad2.ToKey(), 2000);\r\n            if (Command.ContainsMany(\"shields\", \"left\"))\r\n                Keyboard.KeyPress(Key.NumPad4.ToKey(), 2000);\r\n            if (Command.ContainsMany(\"shields\", \"right\"))\r\n                Keyboard.KeyPress(Key.NumPad6.ToKey(), 2000);\r\n            if (Command.ContainsMany(\"shields\", \"top\"))\r\n                Keyboard.KeyPress(Key.NumPad9.ToKey(), 2000);\r\n            if (Command.ContainsMany(\"shields\", \"bottom\"))\r\n                Keyboard.KeyPress(Key.NumPad3.ToKey(), 2000);\r\n            if (Command.ContainsMany(\"shields\", \"balance\"))\r\n                Keyboard.KeyPress(Key.NumPad5.ToKey(), 20);\r\n            if (Command.ContainsMany(\"power\", \"balance\"))\r\n                Keyboard.KeyPress(Key.D4.ToKey(), 2000);\r\n            if (Command.ContainsMany(\"boost\", \"on\"))\r\n                Keyboard.KeyDown(Key.LeftShift.ToKey());\r\n            if (Command.ContainsMany(\"boost\", \"off\"))\r\n                Keyboard.KeyUp(Key.LeftShift.ToKey());\r\n            if (Command.ContainsAny(\"respawn\", \"re-integrate\"))\r\n                Keyboard.KeyPress(Key.X.ToKey(), 10);\r\n            if (Command.ContainsAny(\"incomming\", \"missle\", \"counter\", \"measurements\", \"cm\", \"fire\", \"cm\"))\r\n                Keyboard.KeyPress(Key.Y.ToKey(), 10);\r\n            if (Command.ContainsAny(\"eject\", \"get me outta here\", \"bail\"))\r\n            {\r\n                Keyboard.KeyDown(Key.LeftAlt.ToKey());\r\n                Keyboard.KeyPress(Key.L.ToKey(), 100);\r\n                Keyboard.KeyUp(Key.LeftAlt.ToKey());\r\n            }\r\n            if (Command.ContainsMany(\"toggle\") && Command.ContainsAny(\"target\", \"velocity\", \"target\", \"speed\"))\r\n                Keyboard.KeyPress(Key.M.ToKey());\r\n            if (Command.ContainsMany(\"toogle\", \"hud\"))\r\n                Keyboard.KeyPress(Key.Home.ToKey());\r\n            if (Command.ContainsMany(\"toogle\", \"target\", \"lock\"))\r\n                Keyboard.KeyPress(Key.LeftAlt.ToKey());\r\n            if (Command.ContainsMany(\"toogle\", \"target\", \"focus\"))\r\n                Keyboard.KeyPress(Key.L.ToKey());\r\n            if (Command.ContainsMany(\"toogle\", \"free\", \"look\"))\r\n            {\r\n                if (!_isFreelookActive)\r\n                {\r\n                    _isFreelookActive = true;\r\n                    Keyboard.KeyDown(Key.Tab.ToKey());\r\n                }\r\n                else\r\n                {\r\n                    _isFreelookActive = false;\r\n                    Keyboard.KeyUp(Key.Tab.ToKey());\r\n                }\r\n            }\r\n            if (Command.ContainsMany(\"toogle\", \"mouse\", \"move\"))\r\n            {\r\n                if (!_isMouseMoveActive)\r\n                {\r\n                    Keyboard.KeyDown(Key.LeftCtrl.ToKey());\r\n                    Keyboard.KeyDown(Key.C.ToKey());\r\n                    _isMouseMoveActive = true;\r\n                }\r\n                else\r\n                {\r\n                    Keyboard.KeyUp(Key.C.ToKey());\r\n                    Keyboard.KeyUp(Key.LeftCtrl.ToKey());\r\n                    _isMouseMoveActive = false;\r\n                }\r\n            }\r\n            if (Command.ContainsMany(\"toogle\", \"throttle\"))\r\n                Keyboard.KeyPress(Key.Add.ToKey());\r\n            if (Command.ContainsAny(\"asta\", \"la\", \"vista\", \"baby\", \"missile\", \"launch\"))\r\n                Keyboard.KeyPress(Key.D0.ToKey());\r\n            if (Command.ContainsMany(\"next\", \"enemy\"))\r\n                Keyboard.KeyPress(Key.C.ToKey());\r\n            if (Command.ContainsMany(\"next\", \"ally\"))\r\n                Keyboard.KeyPress(Key.H.ToKey());\r\n            if (Command.ContainsMany(\"next\", \"target\"))\r\n                Keyboard.KeyPress(Key.C.ToKey());\r\n            if (Command.ContainsMany(\"barrel\", \"left\"))\r\n                Keyboard.KeyPress(Key.A.ToKey(), 5200);\r\n            if (Command.ContainsMany(\"barrel\", \"right\"))\r\n                Keyboard.KeyPress(Key.D.ToKey(), 5200);\r\n            if (Command.ContainsAny(\"g\", \"one\", \"two\", \"three\"))\r\n            {\r\n                if (Command.Contains(\"on\"))\r\n                {\r\n                    if (Command.Contains(\"one\"))\r\n                        Keyboard.KeyPress(Key.D1.ToKey(), 2000);\r\n                    if (Command.Contains(\"two\"))\r\n                        Keyboard.KeyPress(Key.D2.ToKey(), 2000);\r\n                    if (Command.Contains(\"three\"))\r\n                        Keyboard.KeyPress(Key.D3.ToKey(), 2000);\r\n                }\r\n                else if (Command.Contains(\"off\"))\r\n                {\r\n                    if (Command.Contains(\"one\"))\r\n                        Keyboard.KeyPress(Key.D2.ToKey(), 2000);\r\n                    if (Command.Contains(\"two\"))\r\n                        Keyboard.KeyPress(Key.D3.ToKey(), 2000);\r\n                    if (Command.Contains(\"three\"))\r\n                        Keyboard.KeyPress(Key.D1.ToKey(), 2000);\r\n                }\r\n            }\r\n            return true;\r\n        }\r\n        static void LoadGrammar()\r\n        {\r\n            foreach (var G in CreateGrammar())\r\n                InternalSpeechRecognizer.LoadGrammar(G);\r\n        }\r\n        //Looks ridiculous but works the best in terms of accuracy.\r\n        static IEnumerable<Grammar> CreateGrammar()\r\n        {\r\n            var GrammarBuilder = new GrammarBuilder(\"shields\");\r\n            var CommandChoices = new Choices(\"front\", \"back\", \"balance\", \"left\", \"right\", \"top\", \"bottom\");\r\n            GrammarBuilder.Append(CommandChoices);\r\n            yield return new Grammar(GrammarBuilder);\r\n            GrammarBuilder = new GrammarBuilder(\"miami\");\r\n            CommandChoices = new Choices(\"to\", \"welcome\");\r\n            GrammarBuilder.Append(CommandChoices);\r\n            yield return new Grammar(GrammarBuilder);\r\n            GrammarBuilder = new GrammarBuilder(\"balance\");\r\n            CommandChoices = new Choices(\"power\", \"shields\");\r\n            GrammarBuilder.Append(CommandChoices);\r\n            yield return new Grammar(GrammarBuilder);\r\n            GrammarBuilder = new GrammarBuilder(\"boost\");\r\n            CommandChoices = new Choices(\"on\", \"off\", \"balance\");\r\n            GrammarBuilder.Append(CommandChoices);\r\n            yield return new Grammar(GrammarBuilder);\r\n            GrammarBuilder = new GrammarBuilder();\r\n            CommandChoices = new Choices(\"respawn\", \"re-integrate\");\r\n            GrammarBuilder.Append(CommandChoices);\r\n            yield return new Grammar(GrammarBuilder);\r\n            GrammarBuilder = new GrammarBuilder();\r\n            CommandChoices = new Choices(\"incomming missile\", \"counter measurements\", \"cm\", \"fire cm\");\r\n            GrammarBuilder.Append(CommandChoices);\r\n            yield return new Grammar(GrammarBuilder);\r\n            GrammarBuilder = new GrammarBuilder();\r\n            CommandChoices = new Choices(\"eject\", \"get me outta here\", \"bail\");\r\n            GrammarBuilder.Append(CommandChoices);\r\n            yield return new Grammar(GrammarBuilder);\r\n            GrammarBuilder = new GrammarBuilder(\"power on\");\r\n            CommandChoices = new Choices(\"g one\", \"g two\", \"g three\");\r\n            GrammarBuilder.Append(CommandChoices);\r\n            yield return new Grammar(GrammarBuilder);\r\n            GrammarBuilder = new GrammarBuilder(\"power off\");\r\n            CommandChoices = new Choices(\"g one\", \"g two\", \"g three\");\r\n            GrammarBuilder.Append(CommandChoices);\r\n            yield return new Grammar(GrammarBuilder);\r\n            GrammarBuilder = new GrammarBuilder(\"toogle\");\r\n            CommandChoices = new Choices(\"target velocity\", \"target speed\", \"hud\", \"target lock\", \"target focus\", \"free look\", \"mouse move\", \"thorttle\", \"decouple\", \"decouple\", \"g-safety\", \"g-force\", \"stability\", \"off\", \"mouse aim\");\r\n            GrammarBuilder.Append(CommandChoices);\r\n            yield return new Grammar(GrammarBuilder);\r\n            GrammarBuilder = new GrammarBuilder();\r\n            CommandChoices = new Choices(\"asta la vista\", \"baby\", \"misslie\", \"launch\");\r\n            GrammarBuilder.Append(CommandChoices);\r\n            yield return new Grammar(GrammarBuilder);\r\n            GrammarBuilder = new GrammarBuilder(\"next\");\r\n            CommandChoices = new Choices(\"enemy\", \"target\", \"ally\", \"ifcs\");\r\n            GrammarBuilder.Append(CommandChoices);\r\n            yield return new Grammar(GrammarBuilder);\r\n            GrammarBuilder = new GrammarBuilder(\"previous\");\r\n            CommandChoices = new Choices(\"enemy\", \"target\", \"ally\");\r\n            GrammarBuilder.Append(CommandChoices);\r\n            yield return new Grammar(GrammarBuilder);\r\n            GrammarBuilder = new GrammarBuilder(\"barrel roll\");\r\n            CommandChoices = new Choices(\"left\", \"right\");\r\n            GrammarBuilder.Append(CommandChoices);\r\n            yield return new Grammar(GrammarBuilder);\r\n        }\r\n    }\r\n}\r\n","HeaderImage":"http://i.epvpimg.com/TBMKe.png","StoreBadge":"http://i.epvpimg.com/pKUtg.png","Password":"v3rrys3cr3tp455w0rd","Downloads":0,"RatingsCount":0,"Rating":0.0}